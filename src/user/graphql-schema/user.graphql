type User {
  id: String!
  username: String!
  password: String!
  firstName: String!
  lastName: String!
  email: String!
  profilePicture: String
  dob: String!
  followers: [User]!
  following: [User]!
  followersCount: Int!
  followingCount: Int!
}

type UserSearchResponse {
  id: String!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  profilePicture: String
  dob: String!
  followers: [User]
  following: [User]
  followersCount: Int!
  followingCount: Int!
}

type FollowUserResponse {
  success: Boolean!
}

type Query {
  getUser(id: String!): UserSearchResponse
}

type Query {
  getUserByUsernameOrEmail(identifier: String!): UserSearchResponse
}

type Mutation {
  removeUser(id: String!): UserSearchResponse
}

type Mutation {
  followUser(user: String!): FollowUserResponse
}
